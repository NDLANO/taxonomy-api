<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.0.xsd"
        logicalFilePath="classpath:db-master-changelog.xml">

    <preConditions>
        <dbms type="postgresql,h2"/>
    </preConditions>

    <include file="db-migrate-changelog-from-flyway.xml"/>
    <include file="db-migrate-from-flyway.xml"/>

    <changeSet id="20190614 topic_resource_types" author="janespen">
        <createTable tableName="topic_resource_type">
            <column name="id" type="serial"><constraints primaryKey="true" /></column>
            <column name="public_id" type="varchar(255)"><constraints nullable="false" unique="true" uniqueConstraintName="topic_resource_type_public_id" /></column>
            <column name="topic_id" type="integer"><constraints referencedTableName="topic" referencedColumnNames="id" foreignKeyName="resource_type_topic_id_fkey"/></column>
            <column name="resource_type_id" type="integer"><constraints referencedTableName="resource_type" referencedColumnNames="id" foreignKeyName="topic_resource_type_id_fkey"/></column>
        </createTable>
        <addUniqueConstraint tableName="topic_resource_type" columnNames="topic_id,resource_type_id" constraintName="topic_resource_type_unique" />
    </changeSet>

    <changeSet id="20190622 create topic_tree_by_subject_id_view view" author="Jon-Eirik Pettersen">
        <validCheckSum>8:3d5d0d5752c5e425e50ff075d9169180</validCheckSum>
        <!-- Modified query from old code migrated to a view for usage in queries -->
        <createView viewName="topic_tree_by_subject_id_view" replaceIfExists="true">
            WITH RECURSIVE topic_tree(topic_id, connection_id, parent_topic_id, topic_rank, topic_level, subject_id) AS
            (

            SELECT st.topic_id, 0 AS connection_id, 0 AS parent_topic_id, st.rank AS topic_rank, 0 AS topic_level,
            st.subject_id AS subject_id
            FROM subject_topic st

            UNION ALL

            SELECT ts.subtopic_id, ts.id AS connection_id, ts.topic_id, ts.rank as topic_rank, topic_level + 1,
            topic_tree.subject_id subject_id
            FROM topic_subtopic ts
            INNER JOIN topic_tree ON ts.topic_id = topic_tree.topic_id)
            SELECT topic_tree.* FROM topic_tree
            ORDER BY topic_level;
        </createView>
    </changeSet>

    <changeSet id="20190623 create topic_tree_by_topic_id_view view" author="Jon-Eirik Pettersen">
        <createView viewName="topic_tree_by_topic_id_view" replaceIfExists="true">
            WITH RECURSIVE topic_tree(root_topic_id, topic_id, parent_topic_id, topic_rank, topic_level) AS (
            SELECT ts_one.topic_id, ts_one.topic_id, 0 AS parent_topic_id, ts_one.rank AS topic_rank, 0 AS topic_level
            FROM topic_subtopic ts_one
            UNION ALL
            SELECT topic_tree.root_topic_id, ts_next.subtopic_id, ts_next.topic_id, ts_next.rank AS topic_rank,
            topic_level + 1
            FROM topic_subtopic ts_next
            INNER JOIN topic_tree on ts_next.topic_id = topic_tree.topic_id)
            SELECT CONCAT(root_topic_id, '-', parent_topic_id, '-', topic_id) AS id, root_topic_id, topic_id,
            parent_topic_id, MIN(topic_rank) AS topic_rank, MIN(topic_level) AS topic_level FROM topic_tree GROUP BY
            root_topic_id,topic_id,parent_topic_id;
        </createView>
    </changeSet>

    <changeSet id="20190924 disable update triggers for cached_url before removing shared topics"
               author="Jon-Eirik Pettersen" dbms="!h2">
        <sql splitStatements="false" stripComments="false">
            DROP TRIGGER refresh_paths ON subject;
            DROP TRIGGER refresh_paths ON topic;
            DROP TRIGGER refresh_paths ON resource;
            DROP TRIGGER refresh_paths ON subject_topic;
            DROP TRIGGER refresh_paths ON topic_subtopic;
            DROP TRIGGER refresh_paths ON topic_resource;
        </sql>
    </changeSet>

    <changeSet id="20190924 clone and remove shared topics" author="Jon-Eirik Pettersen">
        <customChange class="no.ndla.taxonomy.migration.RemoveSharedTopicsSqlChange"/>
    </changeSet>

    <changeSet id="20190925 re-create cached_url without primary connection column" author="Jon-Eirik Pettersen"
               dbms="!h2">
        <sql>
            DROP MATERIALIZED VIEW cached_url;

            CREATE MATERIALIZED VIEW cached_url as (
            WITH RECURSIVE tree (id, public_id, name, parent_public_id, level, path) AS (
            SELECT
            contexts.id,
            contexts.public_id,
            contexts.name,
            cast(NULL AS VARCHAR) AS parent_public_id,
            0 AS level,
            '/' || substr(contexts.public_id, 5) AS path
            FROM
            (
            SELECT
            id,
            public_id,
            name
            FROM subject

            UNION ALL

            SELECT
            id,
            public_id,
            name
            FROM topic
            WHERE context = TRUE
            ) contexts

            UNION ALL

            SELECT
            child.id,
            child.public_id,
            child.name,
            parent.public_id AS parent_public_id,
            parent.level + 1 AS level,
            parent.path || '/' || substr(child.public_id, 5)
            FROM
            (
            SELECT
            r.id,
            r.public_id,
            t.public_id AS parent_public_id,
            r.name
            FROM
            resource r
            INNER JOIN topic_resource tr ON tr.resource_id = r.id
            INNER JOIN topic t ON tr.topic_id = t.id

            UNION ALL

            SELECT
            st.id,
            st.public_id,
            t.public_id AS parent_public_id,
            st.name
            FROM topic t
            INNER JOIN topic_subtopic tst ON t.id = tst.topic_id
            INNER JOIN topic st ON tst.subtopic_id = st.id

            UNION ALL

            SELECT
            t.id,
            t.public_id,
            s.public_id AS parent_public_id,
            t.name
            FROM
            subject s
            INNER JOIN subject_topic st ON s.id = st.subject_id
            INNER JOIN topic t ON st.topic_id = t.id
            ) child
            INNER JOIN tree AS parent ON parent.public_id = child.parent_public_id
            WHERE 1 = 1
            )

            SELECT
            id,
            public_id,
            path,
            parent_public_id
            FROM
            tree t
            );
        </sql>
        <sql>
            CREATE UNIQUE INDEX cached_url_path_idx ON cached_url (path);
        </sql>
        <sql>
            CREATE INDEX cached_url_public_id_idx ON cached_url (public_id);
        </sql>
    </changeSet>

    <changeSet id="20190925 re-enable update triggers for cached_url" author="Jon-Eirik Pettersen" dbms="!h2">
        <sql splitStatements="false" stripComments="false">
            create trigger refresh_paths
            after insert or update or delete or truncate
            on subject
            execute procedure update_url_cache();

            create trigger refresh_paths
            after insert or update or delete or truncate
            on topic
            execute procedure update_url_cache();

            create trigger refresh_paths
            after insert or update or delete or truncate
            on resource
            execute procedure update_url_cache();

            create trigger refresh_paths
            after insert or update or delete or truncate
            on subject_topic
            execute procedure update_url_cache();

            create trigger refresh_paths
            after insert or update or delete or truncate
            on topic_subtopic
            execute procedure update_url_cache();

            create trigger refresh_paths
            after insert or update or delete or truncate
            on topic_resource
            execute procedure update_url_cache();
        </sql>
        <sql>
            REFRESH MATERIALIZED VIEW CONCURRENTLY cached_url;
        </sql>
    </changeSet>

    <changeSet id="20190925 remove is_primary column from connection tables" author="Jon-Eirik Pettersen">
        <dropColumn tableName="subject_topic" columnName="is_primary"/>
        <dropColumn tableName="topic_subtopic" columnName="is_primary"/>
        <dropColumn tableName="topic_resource" columnName="is_primary"/>
    </changeSet>

    <changeSet id="20190925 add constraints to prevent shared topics or resources from being created"
               author="Jon-Eirik Pettersen">
        <addUniqueConstraint tableName="topic_resource" columnNames="resource_id"
                             constraintName="unique_topic_resource_resource_id"/>
        <addUniqueConstraint tableName="topic_subtopic" columnNames="subtopic_id"
                             constraintName="unique_topic_subtopic_subtopic_id"/>
        <addUniqueConstraint tableName="subject_topic" columnNames="topic_id"
                             constraintName="unique_subject_topic_topic_id"/>

        <sql stripComments="false" splitStatements="false" dbms="!h2">
            CREATE FUNCTION check_subject_topic_uniqueness() RETURNS trigger AS $$
            BEGIN
            IF EXISTS(SELECT child_topic_id FROM (SELECT id, topic_id AS child_topic_id FROM subject_topic UNION SELECT
            id, subtopic_id AS child_topic_id FROM topic_subtopic) AS children GROUP BY child_topic_id HAVING COUNT(*) >
            1) THEN
            RAISE EXCEPTION 'More than one connection to parent object found';
            END IF;

            RETURN NULL;
            END;
            $$
            LANGUAGE plpgsql
        </sql>

        <sql dbms="!h2">
            CREATE TRIGGER check_subject_topic_uniqueness_on_topic_subtopic AFTER INSERT OR UPDATE ON topic_subtopic
            EXECUTE PROCEDURE check_subject_topic_uniqueness();
        </sql>
        <sql dbms="!h2">
            CREATE TRIGGER check_subject_topic_uniqueness_on_subject_topic AFTER INSERT OR UPDATE ON subject_topic
            EXECUTE PROCEDURE check_subject_topic_uniqueness();
        </sql>
    </changeSet>

    <changeSet id="20190924 disable update triggers for cached_url before removing shared topics"
               author="Jon-Eirik Pettersen" dbms="!h2">
        <sql splitStatements="false" stripComments="false">
            DROP TRIGGER refresh_paths ON subject;
            DROP TRIGGER refresh_paths ON topic;
            DROP TRIGGER refresh_paths ON resource;
            DROP TRIGGER refresh_paths ON subject_topic;
            DROP TRIGGER refresh_paths ON topic_subtopic;
            DROP TRIGGER refresh_paths ON topic_resource;
        </sql>
    </changeSet>

    <changeSet id="20191114 re-add primary field to topic_resources" author="Jon-Eirik Pettersen">
        <addColumn tableName="topic_resource">
            <column name="is_primary" type="boolean" defaultValueBoolean="true">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="20191114 remove update triggers before merging resources" author="Jon-Eirik Pettersen" dbms="!h2">
        <sql splitStatements="false" stripComments="false">
            DROP TRIGGER IF EXISTS refresh_paths ON subject;
            DROP TRIGGER IF EXISTS refresh_paths ON topic;
            DROP TRIGGER IF EXISTS refresh_paths ON resource;
            DROP TRIGGER IF EXISTS refresh_paths ON subject_topic;
            DROP TRIGGER IF EXISTS refresh_paths ON topic_subtopic;
            DROP TRIGGER IF EXISTS refresh_paths ON topic_resource;
        </sql>
    </changeSet>

    <changeSet id="20191114 remove unique constraints for topic_resource" author="Jon-Eirik Pettersen">
        <dropUniqueConstraint tableName="topic_resource" constraintName="unique_topic_resource_resource_id"/>
    </changeSet>

    <changeSet id="20191115 merge resources with shared content" author="Jon-Eirik Pettersen">
        <customChange class="no.ndla.taxonomy.migration.MergeSharedContentResourcesSqlChange"/>
    </changeSet>

    <changeSet id="20191115 set single primary resource connection" author="Jon-Eirik Pettersen">
        <customChange class="no.ndla.taxonomy.migration.SetSinglePrimaryConnectionOnResourcesSqlChange"/>
    </changeSet>

    <changeSet id="20191115 re-create cached_url and update triggers" author="Jon-Eirik Pettersen" dbms="!h2">
        <sql>
            DROP MATERIALIZED VIEW cached_url;

            CREATE MATERIALIZED VIEW cached_url as (
            WITH RECURSIVE tree (id, public_id, name, parent_public_id, level, is_primary, path) AS (
            SELECT
            contexts.id,
            contexts.public_id,
            contexts.name,
            cast(NULL AS VARCHAR) AS parent_public_id,
            0 AS level,
            TRUE AS is_primary,
            '/' || substr(contexts.public_id, 5) AS path
            FROM
            (
            SELECT
            id,
            public_id,
            name
            FROM subject

            UNION ALL

            SELECT
            id,
            public_id,
            name
            FROM topic
            WHERE context = TRUE
            ) contexts

            UNION ALL

            SELECT
            child.id,
            child.public_id,
            child.name,
            parent.public_id AS parent_public_id,
            parent.level + 1 AS level,
            child.is_primary AND parent.is_primary AS is_primary,
            parent.path || '/' || substr(child.public_id, 5)
            FROM
            (
            SELECT
            r.id,
            r.public_id,
            t.public_id AS parent_public_id,
            r.name,
            tr.is_primary AS is_primary
            FROM
            resource r
            INNER JOIN topic_resource tr ON tr.resource_id = r.id
            INNER JOIN topic t ON tr.topic_id = t.id

            UNION ALL

            SELECT
            st.id,
            st.public_id,
            t.public_id AS parent_public_id,
            st.name,
            TRUE AS is_primary
            FROM topic t
            INNER JOIN topic_subtopic tst ON t.id = tst.topic_id
            INNER JOIN topic st ON tst.subtopic_id = st.id

            UNION ALL

            SELECT
            t.id,
            t.public_id,
            s.public_id AS parent_public_id,
            t.name,
            TRUE AS is_primary
            FROM
            subject s
            INNER JOIN subject_topic st ON s.id = st.subject_id
            INNER JOIN topic t ON st.topic_id = t.id
            ) child
            INNER JOIN tree AS parent ON parent.public_id = child.parent_public_id
            WHERE 1 = 1
            )

            SELECT
            id,
            public_id,
            path,
            is_primary,
            parent_public_id
            FROM
            tree t
            );
        </sql>
        <sql>
            CREATE UNIQUE INDEX cached_url_path_idx ON cached_url (path);
        </sql>
        <sql>
            CREATE INDEX cached_url_public_id_idx ON cached_url (public_id);
        </sql>

        <sql splitStatements="false" stripComments="false">
            create trigger refresh_paths
            after insert or update or delete or truncate
            on subject
            execute procedure update_url_cache();

            create trigger refresh_paths
            after insert or update or delete or truncate
            on topic
            execute procedure update_url_cache();

            create trigger refresh_paths
            after insert or update or delete or truncate
            on resource
            execute procedure update_url_cache();

            create trigger refresh_paths
            after insert or update or delete or truncate
            on subject_topic
            execute procedure update_url_cache();

            create trigger refresh_paths
            after insert or update or delete or truncate
            on topic_subtopic
            execute procedure update_url_cache();

            create trigger refresh_paths
            after insert or update or delete or truncate
            on topic_resource
            execute procedure update_url_cache();
        </sql>
        <sql>
            REFRESH MATERIALIZED VIEW CONCURRENTLY cached_url;
        </sql>
    </changeSet>

    <changeSet id="20191115 add unique constraint to prevent shared content_uri on resources"
               author="Jon-Eirik Pettersen">
        <addUniqueConstraint tableName="resource" columnNames="content_uri"
                             constraintName="unique_resource_content_uri"/>
    </changeSet>

    <changeSet id="20200504 add cached_paths table" author="Jon-Eirik Pettersen">
        <createTable tableName="cached_path">
            <column name="id" type="uuid">
                <constraints primaryKey="true"/>
            </column>
            <column name="public_id" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="path" type="varchar(1000)">
                <constraints nullable="false"/>
            </column>
            <column name="is_primary" type="boolean">
                <constraints nullable="false"/>
            </column>
            <column name="subject_id" type="integer"/>
            <column name="topic_id" type="integer"/>
            <column name="resource_id" type="integer"/>
        </createTable>
    </changeSet>

    <changeSet id="20200505 add foreign keys and indices to cached_paths" author="Jon-Eirik Pettersen">
        <createIndex tableName="cached_path" indexName="cached_path_subject_id">
            <column name="subject_id"/>
        </createIndex>

        <createIndex tableName="cached_path" indexName="cached_path_topic_id">
            <column name="topic_id"/>
        </createIndex>

        <createIndex tableName="cached_path" indexName="cached_path_resource_id">
            <column name="resource_id"/>
        </createIndex>

        <addForeignKeyConstraint baseTableName="cached_path" baseColumnNames="subject_id"
                                 constraintName="fk_cached_path_subject_id"
                                 referencedTableName="subject" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>
        <addForeignKeyConstraint baseTableName="cached_path" baseColumnNames="resource_id"
                                 constraintName="fk_cached_path_resource_id"
                                 referencedTableName="resource" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>
        <addForeignKeyConstraint baseTableName="cached_path" baseColumnNames="topic_id"
                                 constraintName="fk_cached_path_topic_id"
                                 referencedTableName="topic" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>
    </changeSet>

    <changeSet id="20200506 add unique constraint to cached_path path" author="Jon-Eirik Pettersen">
        <addUniqueConstraint tableName="cached_path" columnNames="path" constraintName="unique_cached_path_path"/>
    </changeSet>

    <changeSet id="20200506 migrate data from cached_url materialized view to cached_path table"
               author="Jon-Eirik Pettersen" dbms="!h2">
        <sql splitStatements="false" stripComments="false">
            TRUNCATE cached_path;

            INSERT INTO cached_path
            SELECT
            uuid_in(md5(random()::text || clock_timestamp()::text)::cstring) AS id,
            public_id, path, is_primary,
            (SELECT id FROM subject WHERE subject.public_id = cached_url.public_id) as subject_id,
            (SELECT id FROM topic WHERE topic.public_id = cached_url.public_id) as topic_id,
            (SELECT id FROM resource WHERE resource.public_id = cached_url.public_id) as resource_id
            FROM cached_url;
        </sql>
    </changeSet>
    <changeSet id="20200506 delete cached_url materialized view" author="Jon-Eirik Pettersen" dbms="!h2">
        <sql splitStatements="false" stripComments="false">
            DROP TRIGGER IF EXISTS refresh_paths ON subject;
            DROP TRIGGER IF EXISTS refresh_paths ON topic;
            DROP TRIGGER IF EXISTS refresh_paths ON resource;
            DROP TRIGGER IF EXISTS refresh_paths ON subject_topic;
            DROP TRIGGER IF EXISTS refresh_paths ON topic_subtopic;
            DROP TRIGGER IF EXISTS refresh_paths ON topic_resource;

            DROP MATERIALIZED VIEW cached_url;
        </sql>
    </changeSet>

    <changeSet id="20200506 add auto_increment to serial columns" author="Jon-Eirik Pettersen">
        <validCheckSum>8:8a8f66f412d323763364dacdf98e5ddf</validCheckSum>
        <!--
            This was correctly set up by flyway migrations, but newly created databases after flyway
            migration had some issues both on Postgres and H2, but not the embedded postgres used before on tests

        <addAutoIncrement tableName="subject" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="subject_translation" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="topic" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="topic_translation" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="resource" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="resource_translation" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="filter" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="filter_translation" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="resource_type" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="resource_type_translation" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="subject_topic" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="topic_subtopic" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="topic_resource" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="topic_filter" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="resource_filter" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="relevance" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="relevance_translation" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="resource_resource_type" columnName="id" columnDataType="int"/>
        <addAutoIncrement tableName="topic_resource_type" columnName="id" columnDataType="int"/>
        -->
    </changeSet>

    <changeSet id="20200508 delete view topic_tree_by_subject_id_view" author="Jon-Eirik Pettersen">
        <sql>DROP VIEW IF EXISTS topic_tree_by_subject_id_view</sql>
    </changeSet>
    <changeSet id="20200508 delete view topic_tree_by_topic_id_view" author="Jon-Eirik Pettersen">
        <sql>DROP VIEW IF EXISTS topic_tree_by_topic_id_view</sql>
    </changeSet>

    <changeSet id="20200902 add content_uri to filter" author="Gunnar Velle">
        <addColumn tableName="filter">
            <column name="content_uri" type="varchar(255)">
                <constraints nullable="true"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="20210118 add relevance_id to topic-subtopic" author="Max Moeschinger">
        <addColumn tableName="topic_subtopic">
            <column name="relevance_id" type="integer"><constraints nullable="true" /></column>
        </addColumn>
        <addColumn tableName="subject_topic">
            <column name="relevance_id" type="integer"><constraints nullable="true" /></column>
        </addColumn>
        <addColumn tableName="topic_resource">
            <column name="relevance_id" type="integer"><constraints nullable="true" /></column>
        </addColumn>
    </changeSet>

    <changeSet id="20210302 unlink filters" author="Jan-Espen Oversand">
        <!-- incision that disconnects the filters from the rest of the structures -->
        <dropForeignKeyConstraint baseTableName="resource_filter" constraintName="resource_filter_resource_id_fkey"/>
        <dropForeignKeyConstraint baseTableName="resource_filter" constraintName="resource_filter_relevance_id_fkey"/>
        <dropForeignKeyConstraint baseTableName="topic_filter" constraintName="topic_filter_topic_id_fkey"/>
        <dropForeignKeyConstraint baseTableName="topic_filter" constraintName="topic_filter_relevance_id_fkey"/>
        <dropForeignKeyConstraint baseTableName="filter" constraintName="filter_subject_id_fkey"/>
    </changeSet>

    <changeSet id="20210623" author="Gunnar Velle">
        <!-- Adds active flag to cached_path to avoid database locks -->
        <addColumn tableName="cached_path">
            <column name="is_active" type="boolean" defaultValue="true">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="20210623_2" author="Gunnar Velle">
        <!-- remove constraint for unique path in cached_path -->
        <dropUniqueConstraint tableName="cached_path" constraintName="unique_cached_path_path"/>
    </changeSet>

    <changeSet id="20210305 01 drop filter relations" author="Jan-Espen Oversand">
        <dropTable tableName="resource_filter"/>
        <dropTable tableName="topic_filter"/>
    </changeSet>
    <changeSet id="20210305 02 drop filters" author="Jan-Espen Oversand">
        <dropTable tableName="filter_translation"/>
        <dropTable tableName="filter"/>
    </changeSet>

    <changeSet id="20211005 unlink topic resources" author="Gunnar Velle">
        <dropUniqueConstraint tableName="topic_resource_type" constraintName="topic_resource_type_public_id"/>
        <dropForeignKeyConstraint baseTableName="topic_resource_type" constraintName="resource_type_topic_id_fkey"/>
        <dropForeignKeyConstraint baseTableName="topic_resource_type" constraintName="topic_resource_type_id_fkey"/>
        <dropUniqueConstraint tableName="topic_resource_type" constraintName="topic_resource_type_unique"/>
    </changeSet>
    <changeSet id="20211005 drop topic resources" author="Gunnar Velle">
        <dropTable tableName="topic_resource_type"/>
    </changeSet>

    <changeSet id="20211018 change language-code length" author="Gunnar Velle">
        <modifyDataType tableName="relevance_translation" columnName="language_code" newDataType="varchar(7)"/>
        <modifyDataType tableName="resource_translation" columnName="language_code" newDataType="varchar(7)"/>
        <modifyDataType tableName="resource_type_translation" columnName="language_code" newDataType="varchar(7)"/>
        <modifyDataType tableName="subject_translation" columnName="language_code" newDataType="varchar(7)"/>
        <modifyDataType tableName="topic_translation" columnName="language_code" newDataType="varchar(7)"/>
    </changeSet>
    
    <changeSet id="20211020 01 create tables for node" author="Gunnar Velle">
        <createTable tableName="node">
            <column name="id" type="serial" autoIncrement="true">
                <constraints primaryKey="true" uniqueConstraintName="node_pkey"/>
            </column>
            <column name="public_id" type="varchar(255)" >
                <constraints nullable="false" uniqueConstraintName="node_public_id"/>
            </column>
            <column name="node_type" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="ident" type="varchar(255)">
                <constraints nullable="false" unique="false"/>
            </column>
            <column name="name" type="varchar(255)"/>
            <column name="content_uri" type="varchar(255)"/>
            <column name="context" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <addUniqueConstraint tableName="node" columnNames="node_type,ident" constraintName="unique_node_type_ident"/>

        <createTable tableName="node_connection">
            <column name="id" type="serial" autoIncrement="true">
                <constraints primaryKey="true" uniqueConstraintName="node_connection_pkey"/>
            </column>
            <column name="public_id" type="varchar(255)">
                <constraints nullable="false" unique="true"/>
            </column>
            <column name="parent_id" type="integer">
                <constraints nullable="false"/>
            </column>
            <column name="child_id" type="integer">
                <constraints nullable="false"/>
            </column>
            <column name="rank" type="integer"/>
            <column name="relevance_id" type="integer"/>
        </createTable>
        <addForeignKeyConstraint baseTableName="node_connection" baseColumnNames="parent_id"
                                 constraintName="fk_node_connection_parent_id"
                                 referencedTableName="node" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>
        <addForeignKeyConstraint baseTableName="node_connection" baseColumnNames="child_id"
                                 constraintName="fk_node_connection_child_id"
                                 referencedTableName="node" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>

        <createTable tableName="node_resource">
            <column name="id" type="serial" autoIncrement="true">
                <constraints primaryKey="true" uniqueConstraintName="node_resource_pkey"/>
            </column>
            <column name="public_id" type="varchar(255)">
                <constraints nullable="false" unique="true" uniqueConstraintName="node_resource_public_id"/>
            </column>
            <column name="node_id" type="integer">
                <constraints nullable="false"/>
            </column>
            <column name="resource_id" type="integer">
                <constraints nullable="false"/>
            </column>
            <column name="rank" type="integer"/>
            <column name="relevance_id" type="integer"/>
            <column name="is_primary" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <addForeignKeyConstraint baseTableName="node_resource" baseColumnNames="node_id"
                                 constraintName="fk_node_resource_node_id"
                                 referencedTableName="node" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>
        <addForeignKeyConstraint baseTableName="node_resource" baseColumnNames="resource_id"
                                 constraintName="fk_node_resource_resource_id"
                                 referencedTableName="resource" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>
        
        <createTable tableName="node_translation">
            <column name="id" type="serial" autoIncrement="true">
                <constraints primaryKey="true" uniqueConstraintName="node_translation_pkey"/>
            </column>
            <column name="node_id" type="integer">
                <constraints nullable="false"/>
            </column>
            <column name="language_code" type="varchar(3)">
                <constraints nullable="false"/>
            </column>
            <column name="name" type="varchar(255)"/>
        </createTable>
        <addForeignKeyConstraint baseTableName="node_translation" baseColumnNames="node_id"
                                 constraintName="fk_node_translation_node_id"
                                 referencedTableName="node" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>
        
        <addColumn tableName="cached_path">
            <column name="node_id" type="integer"/>
        </addColumn>
        <addForeignKeyConstraint baseTableName="cached_path" baseColumnNames="node_id"
                                 constraintName="fk_cached_path_node_id"
                                 referencedTableName="node" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>

    </changeSet>

    <changeSet id="20211020 copy subjects to nodes" author="Gunnar Velle">
        <sql splitStatements="false" stripComments="false">
            INSERT INTO node (public_id, ident, node_type, name, content_uri, context)
            SELECT public_id, REPLACE(public_id, 'urn:subject:', '') as ident, 'SUBJECT' as node_type, name, content_uri, true AS context FROM subject;
        </sql>
    </changeSet>
    <changeSet id="20211020 copy topics to nodes" author="Gunnar Velle">
        <sql splitStatements="false" stripComments="false">
            INSERT INTO node (public_id, ident, node_type, name, content_uri, context)
            SELECT public_id, REPLACE(public_id, 'urn:topic:', '') as ident, 'TOPIC' as node_type, name, content_uri, context FROM topic;
        </sql>
    </changeSet>
    <changeSet id="20211020 copy subjects to nodes - relations" author="Gunnar Velle">
        <sql splitStatements="false" stripComments="false">
            INSERT INTO node_connection (public_id, parent_id, child_id, rank, relevance_id)
            SELECT
            r.public_id AS public_id,
            (SELECT n.id FROM node n WHERE n.public_id = (SELECT s.public_id FROM subject s WHERE s.id = r.subject_id)) AS parent_id,
            (SELECT n.id FROM node n WHERE n.public_id = (SELECT t.public_id FROM topic t WHERE t.id = r.topic_id)) AS child_id,
            r.rank AS rank,
            r.relevance_id AS relevance_id
            FROM subject_topic r;
        </sql>
    </changeSet>
    <changeSet id="20211020 copy topics to nodes - relations" author="Gunnar Velle">
        <sql splitStatements="false" stripComments="false">
            INSERT INTO node_connection (public_id, parent_id, child_id, rank, relevance_id)
            SELECT
            r.public_id AS public_id,
            (SELECT n.id FROM node n WHERE n.public_id = (SELECT t.public_id FROM topic t WHERE t.id = r.topic_id)) AS parent_id,
            (SELECT n.id FROM node n WHERE n.public_id = (SELECT t.public_id FROM topic t WHERE t.id = r.subtopic_id)) AS child_id,
            r.rank AS rank,
            r.relevance_id AS relevance_id
            FROM topic_subtopic r;
        </sql>
    </changeSet>
    <changeSet id="20211020 move cached paths from other to node" author="Gunnar Velle">
        <sql splitStatements="false" stripComments="false">
            UPDATE cached_path c SET node_id = (SELECT n.id FROM node n WHERE n.public_id = c.public_id);
            UPDATE cached_path c SET subject_id = NULL WHERE c.subject_id IS NOT NULL;
            UPDATE cached_path c SET topic_id = NULL WHERE c.topic_id IS NOT NULL;
        </sql>
    </changeSet>
    <changeSet id="20211020 copy translations from subjects to nodes" author="Gunnar Velle">
        <sql splitStatements="false" stripComments="false">
            INSERT INTO node_translation
            (node_id, language_code, name)
            SELECT
            (SELECT n.id FROM node n WHERE n.public_id =
            (SELECT s.public_id FROM subject s WHERE s.id = st.subject_id)
            ) AS node_id,
            st.language_code AS language_code,
            st.name as name
            FROM subject_translation st;
        </sql>
    </changeSet>
    <changeSet id="20211020 copy translations from topics to nodes" author="Gunnar Velle">
        <sql splitStatements="false" stripComments="false">
            INSERT INTO node_translation
            (node_id, language_code, name)
            SELECT
            (SELECT n.id FROM node n WHERE n.public_id =
            (SELECT t.public_id FROM topic t WHERE t.id = tt.topic_id)
            ) AS node_id,
            tt.language_code AS language_code,
            tt.name as name
            FROM topic_translation tt;
        </sql>
    </changeSet>
    <changeSet id="20211020 copy resources from topics to nodes" author="Gunnar Velle">
        <sql splitStatements="false" stripComments="false">
            INSERT INTO node_resource
            (node_id, public_id, resource_id, is_primary, rank, relevance_id)
            SELECT
            (SELECT n.id FROM node n WHERE n.public_id =
            (SELECT t.public_id FROM topic t WHERE t.id = tr.topic_id)
            ) AS node_id,
            tr.public_id as public_id,
            tr.resource_id as resource_id,
            tr.is_primary AS is_primary,
            tr.rank AS rank,
            tr.relevance_id as relevance_id
            FROM topic_resource tr;
        </sql>
    </changeSet>

    <changeSet id="20211126 add root param to node" author="Gunnar Velle">
        <addColumn tableName="node">
            <column name="root" type="boolean" defaultValueBoolean="false"/>
        </addColumn>
        <sql splitStatements="false" stripComments="false">
            UPDATE node SET root = true
            WHERE node_type = 'SUBJECT';
        </sql>
    </changeSet>

    <changeSet id="20220104 add missing index for cached path" author="Gunnar Velle">
        <createIndex tableName="cached_path" indexName="cached_path_node_id">
            <column name="node_id"/>
        </createIndex>
        <addUniqueConstraint tableName="node" columnNames="public_id"
                             constraintName="node_public_id"/>
        <addUniqueConstraint tableName="node_resource" columnNames="node_id,resource_id"
                             constraintName="node_resource_unique"/>
        <addUniqueConstraint tableName="node_connection" columnNames="child_id"
                             constraintName="unique_node_connection_child_id"/>
        <addUniqueConstraint tableName="node_connection" columnNames="parent_id,child_id"
                             constraintName="node_connection_unique"/>
        <addUniqueConstraint tableName="node_translation" columnNames="node_id,language_code"
                             constraintName="node_language_unique" />
    </changeSet>

    <changeSet id="20220105 removes old fields" author="Gunnar Velle">
        <dropColumn tableName="cached_path" columnName="subject_id"/>
        <dropColumn tableName="cached_path" columnName="topic_id"/>
    </changeSet>

    <!-- Adapted from taxonomy metadata -->
    <changeSet id="20200212 create metadata table" author="jon-eirik.pettersen@cerpus.com">
        <createTable tableName="metadata">
            <column name="id" type="serial" autoIncrement="true"><constraints primaryKey="true" nullable="false" /></column>
            <column name="created_at" type="datetime"><constraints nullable="false" /></column>
            <column name="updated_at" type="datetime" />
            <column name="visible" type="boolean" defaultValueBoolean="true">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="20200212 create grep_code table" author="jon-eirik.pettersen@cerpus.com">
        <createTable tableName="grep_code">
            <column name="id" type="serial" autoIncrement="true"><constraints primaryKey="true" nullable="false" /></column>
            <column name="code" type="varchar(50)"><constraints uniqueConstraintName="unique_grep_code_code" unique="true" nullable="false" /></column>
            <column name="created_at" type="datetime"><constraints nullable="false" /></column>
            <column name="updated_at" type="datetime" />
        </createTable>
    </changeSet>

    <changeSet id="20200212 create metadata_grep_code table" author="jon-eirik.pettersen@cerpus.com">
        <createTable tableName="metadata_grep_code">
            <column name="metadata_id" type="integer"><constraints nullable="false" /></column>
            <column name="grep_code_id" type="integer">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <addPrimaryKey tableName="metadata_grep_code" columnNames="metadata_id,grep_code_id"/>

        <addForeignKeyConstraint baseTableName="metadata_grep_code" baseColumnNames="metadata_id"
                                 constraintName="fk_metadata_grep_code_entity_id"
                                 referencedTableName="metadata" referencedColumnNames="id"/>
        <addForeignKeyConstraint baseTableName="metadata_grep_code" baseColumnNames="grep_code_id"
                                 constraintName="fk_metadata_grep_code_grep_code_id"
                                 referencedTableName="grep_code" referencedColumnNames="id"/>
    </changeSet>

    <changeSet id="20210408 create custom field table" author="jan.espen.oversand@cerpus.com">
        <createTable tableName="custom_field">
            <column name="id" type="serial" autoIncrement="true"><constraints primaryKey="true" nullable="false" /></column>
            <column name="created_at" type="datetime"><constraints nullable="false" /></column>
            <column name="updated_at" type="datetime" />
            <column name="key" type="varchar(100)"><constraints unique="true" uniqueConstraintName="unique_taxonomy_custom_fields_key" nullable="false" /></column>
        </createTable>
    </changeSet>

    <changeSet id="20210408 create custom field value table" author="jan.espen.oversand@cerpus.com">
        <createTable tableName="custom_field_value">
            <column name="id" type="serial" autoIncrement="true"><constraints primaryKey="true" nullable="false" /></column>
            <column name="metadata_id" type="integer"><constraints nullable="false" /></column>
            <column name="custom_field_id" type="integer"><constraints nullable="false" /></column>
            <column name="value" type="text"/>
        </createTable>

        <addUniqueConstraint constraintName="unique_metadata_id_custom_field_value" tableName="custom_field_value" columnNames="metadata_id,custom_field_id"/>

        <addForeignKeyConstraint baseTableName="custom_field_value" baseColumnNames="metadata_id"
                                 constraintName="fk_metadata_custom_field_value_id"
                                 referencedTableName="metadata" referencedColumnNames="id"/>
        <addForeignKeyConstraint baseTableName="custom_field_value" baseColumnNames="custom_field_id"
                                 constraintName="fk_custom_field_custom_field_value_id"
                                 referencedTableName="custom_field" referencedColumnNames="id"/>
    </changeSet>

    <changeSet id="20220208 add metadata references" author="Gunnar Velle">
        <addColumn tableName="node">
            <column name="metadata_id" type="integer"/>
        </addColumn>
        <addColumn tableName="resource">
            <column name="metadata_id" type="integer"/>
        </addColumn>
        <addForeignKeyConstraint baseTableName="node" baseColumnNames="metadata_id"
                                 constraintName="fk_node_metadata_id"
                                 referencedTableName="metadata" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>
        <addForeignKeyConstraint baseTableName="resource" baseColumnNames="metadata_id"
                                 constraintName="fk_resource_metadata_id"
                                 referencedTableName="metadata" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>
    </changeSet>

    <changeSet id="20220216 merge metadata into local base" author="Gunnar Velle">
        <customChange class="no.ndla.taxonomy.migration.CopyDataFromMetadataServiceSqlChange"/>
    </changeSet>
    <!-- Adapted from taxonomy metadata -->

    <changeSet id="20220228 add version table" author="Gunnar Velle">
        <createTable tableName="version">
            <column name="id" type="serial" autoIncrement="true">
                <constraints primaryKey="true" uniqueConstraintName="version_pkey"/>
            </column>
            <column name="public_id" type="varchar(255)">
                <constraints nullable="false" unique="true" uniqueConstraintName="version_public_id"/>
            </column>
            <column name="version_type" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
            <column name="name" type="varchar(255)">
                <constraints nullable="true"/>
            </column>
            <column name="hash" type="varchar(255)">
                <constraints nullable="false" unique="true" uniqueConstraintName="version_hash"/>
            </column>
            <column name="locked" type="boolean" defaultValueBoolean="false"/>
            <column name="published" type="timestamp with time zone">
                <constraints nullable="true"/>
            </column>
            <column name="archived" type="timestamp with time zone">
                <constraints nullable="true"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet id="20220225 add script to clone schema" author="Gunnar Velle" dbms="h2" runOnChange="true">
        <!-- Cannot define functions in H2, but can emulate with alias to java function, which returns ResultSet -->
        <sql splitStatements="false">
            CREATE ALIAS clone_schema AS $$
            java.sql.ResultSet cloneSchema(java.lang.String source_schema, java.lang.String dest_schema, boolean
            include_recs, boolean ddl_only) {
                return new org.h2.tools.SimpleResultSet();
            }
            $$
        </sql>
    </changeSet>

    <changeSet id="20220225 add script to clone schema" author="Gunnar Velle" dbms="!h2" runOnChange="true">
        <!-- Fetched from http://pateldenish.com/2019/08/clone-schema-in-postgres.html -->
        <!-- and https://github.com/denishpatel/pg-clone-schema/blob/master/clone_schema.sql -->
        <!-- NB! Original script is changed so the functions is created in current schema and not public! -->
        <sqlFile path="clone_schema.sql" splitStatements="false"/>
    </changeSet>

    <changeSet id="20220302 drop old tables" author="Gunnar Velle">
        <dropTable tableName="subject_topic"/>
        <dropTable tableName="topic_subtopic"/>
        <dropTable tableName="topic_resource"/>
        <dropTable tableName="topic_translation"/>
        <dropTable tableName="topic"/>
        <dropTable tableName="subject_translation"/>
        <dropTable tableName="subject"/>
    </changeSet>

    <!-- metadata for connection object -->
    <changeSet id="20220920 add metadata to connections" author="Gunnar Velle">
        <addColumn tableName="node_connection">
            <column name="metadata_id" type="integer"/>
        </addColumn>
        <addColumn tableName="node_resource">
            <column name="metadata_id" type="integer"/>
        </addColumn>
        <addForeignKeyConstraint baseTableName="node_connection" baseColumnNames="metadata_id"
                                 constraintName="fk_node_connection_metadata_id"
                                 referencedTableName="metadata" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>
        <addForeignKeyConstraint baseTableName="node_resource" baseColumnNames="metadata_id"
                                 constraintName="fk_node_resource_metadata_id"
                                 referencedTableName="metadata" referencedColumnNames="id"
                                 onDelete="RESTRICT" onUpdate="RESTRICT"/>
    </changeSet>
    <changeSet id="20220920 populate connections with metadata" author="Gunnar Velle">
        <customChange class="no.ndla.taxonomy.migration.CreateMetadataForConnectionsSqlChange">
            <param name="schema" value="${schema}"/>
        </customChange>
    </changeSet>
    <!-- end metadata for connection object -->

    <changeSet id="20221019 change language-code length" author="Gunnar Velle">
        <modifyDataType tableName="node_translation" columnName="language_code" newDataType="varchar(7)"/>
    </changeSet>

    <changeSet id="20221019 add index to improve composite index" author="Gunnar Velle">
        <createIndex tableName="node_connection" indexName="node_connection_parent_id">
            <column name="parent_id"/>
        </createIndex>
        <createIndex tableName="node_resource" indexName="node_resource_node_id">
            <column name="node_id"/>
        </createIndex>
        <createIndex tableName="node_resource" indexName="node_resource_resource_id">
            <column name="resource_id"/>
        </createIndex>
    </changeSet>

</databaseChangeLog>
